buildscript {
    ext {
        springBootVersion = '1.5.6.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "com.moowork.node" version "1.1.1"
    id "org.sonarqube" version "2.5"
}

apply plugin: 'java'
apply plugin: "jacoco"
apply plugin: 'org.springframework.boot'
apply plugin: 'com.moowork.node'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply from: "$rootDir/gradle/versioning.gradle"
apply from: "$rootDir/gradle/docker.gradle"
apply from: "$rootDir/gradle/integrationTest.gradle"

node {
    download = true
    version = '6.11.0'
    workDir = file("${project.buildDir}/node")
    nodeModulesDir = file("${project.projectDir}")
}

jar {
    baseName = 'ms60min'
}

sonarqube {
    properties {
        property 'sonar.projectName', 'Microservice in 60 Minutes'
        property 'sonar.jacoco.reportPaths', 'build/jacoco/test.exec,build/jacoco/integrationTest.exec'
        properties['sonar.tests'] += sourceSets.integrationTest.allSource.srcDirs
    }
}

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile('org.springframework.boot:spring-boot-starter-data-rest')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.data:spring-data-rest-hal-browser')

    compileOnly('org.projectlombok:lombok')

    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.hsqldb:hsqldb')

    testCompile('org.springframework.boot:spring-boot-starter-test')
}

task copyWebApp(type: Copy) {
    from('dist') {
        include '**/*.js'
    }
    from('src/main/webapp') {
        include '**/*.css'
        include '**/*.html'
    }
    into 'build/resources/main/static'

    includeEmptyDirs = false
}

npm_run_build.inputs.dir new File(projectDir, "src/main/webapp")
npm_run_build.outputs.dir new File(projectDir, "dist")

npm_run_build.dependsOn npm_install

copyWebApp.outputs.dir new File(projectDir, "dist")
copyWebApp.dependsOn npm_run_build

jar.dependsOn copyWebApp
build.dependsOn createDockerfile, npm_install, copyWebApp


